{"version":3,"sources":["Home.js","../../src/chart.tsx","../../src/index.tsx","charts/VerticalBar.js","charts/HorizontalBar.js","charts/StackedBar.js","charts/GroupedBar.js","charts/Line.js","charts/MultiAxisLine.js","charts/Scatter.js","charts/Doughnut.js","charts/Pie.js","charts/Polar.js","charts/Radar.js","charts/Dynamic.js","charts/MultiType.js","charts/Crazy.js","index.js"],"names":["Home","className","class","href","to","ChartComponent","id","props","height","width","redraw","type","data","options","plugins","canvas","React","chart","setChart","computedData","merge","renderChart","updateChart","Chart","datasets","newDataSets","newChartData","currentDataSets","assign","currentDataSet","find","d","newDataSet","destroyChart","ref","LineChart","BarChart","HorizontalBarChart","RadarChart","DoughnutChart","PolarAreaChart","PieChart","ScatterChart","labels","label","backgroundColor","borderColor","borderWidth","scales","yAxes","ticks","beginAtZero","VerticalBar","HorizontalBar","stacked","xAxes","StackedBar","GroupedBar","fill","Line","yAxisID","display","position","gridLines","drawOnChartArea","MultiAxisLine","rand","Math","round","random","x","y","Scatter","Doughnut","Pie","Polar","scale","Radar","genData","Dynamic","useState","setData","useEffect","interval","setInterval","clearInterval","MultiType","floor","Crazy","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95726a96.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">@jhonnold/react-chart.js</h1>\n            <h2 className=\"subtitle\">React Components for Chart.js</h2>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-npm\"\n                    href=\"https://www.npmjs.com/package/@jhonnold/react-chart.js\"\n                >\n                    NPM\n                </a>\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://www.github.com/jhonnold/react-chart.js\"\n                >\n                    Github\n                </a>\n                <a class=\"btn btn-chartjs\" href=\"https://www.chartjs.org\">\n                    Chart.js\n                </a>\n            </div>\n        </div>\n        <hr />\n        <div className=\"categories\">\n            <div className=\"category\">\n                <h3 className=\"title\">Bar Charts</h3>\n                <ul className=\"items\">\n                    <li className=\"entry\">\n                        <Link to=\"/vertical-bar\">Vertical</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/horizontal-bar\">Horizontal</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/grouped-bar\">Grouped</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/stacked-bar\">Stacked</Link>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"category\">\n                <h3 className=\"title\">Line Charts</h3>\n                <ul className=\"items\">\n                    <li className=\"entry\">\n                        <Link to=\"/line\">Basic</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/multi-axis-line\">Multi Axis</Link>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"category\">\n                <h3 className=\"title\">Other Charts</h3>\n                <ul className=\"items\">\n                    <li className=\"entry\">\n                        <Link to=\"/scatter\">Scatter</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/doughnut\">Doughnut</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/pie\">Pie</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/polar\">Polar</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/radar\">Radar</Link>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"category\">\n                <h3 className=\"title\">Advanced Charts</h3>\n                <ul className=\"items\">\n                    <li className=\"entry\">\n                        <Link to=\"/dynamic-bar\">Dynamic</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/multi\">Multi Type</Link>\n                    </li>\n                    <li className=\"entry\">\n                        <Link to=\"/crazy\">Crazy</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <hr />\n        <div className=\"footer\">\n            <h6>\n                For questions or issues please visit{' '}\n                <a href=\"https://github.com/jhonnold/react-chart.js/issues\">\n                    Github\n                </a>\n            </h6>\n        </div>\n    </>\n);\n\nexport default Home;\n","import * as React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\n\nimport Chart from 'chart.js';\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\n\nconst ChartComponent = React.forwardRef(\n    (props: Props, ref): React.ReactElement => {\n        const {\n            id,\n            height = 150,\n            width = 300,\n            redraw = false,\n            type,\n            data,\n            options = {},\n            plugins = [],\n        } = props;\n\n        const canvas = React.useRef<HTMLCanvasElement>(null);\n        const [chart, setChart] = React.useState<Chart | null>(null);\n\n        React.useImperativeHandle(ref, (): Chart | null => chart, [chart]);\n\n        const computedData = React.useMemo<Chart.ChartData>(\n            (): Chart.ChartData =>\n                typeof data === 'function'\n                    ? data(canvas.current)\n                    : merge({}, data),\n            [data, canvas.current]\n        );\n\n        const renderChart = (): void => {\n            if (canvas.current === null) return;\n\n            setChart(\n                new Chart(canvas.current, {\n                    type,\n                    data: computedData,\n                    options,\n                    plugins,\n                })\n            );\n        };\n\n        const updateChart = (): void => {\n            if (!chart) return;\n\n            if (options) {\n                chart.options = Chart.helpers.configMerge(\n                    chart.options,\n                    options\n                );\n            }\n\n            if (!chart.config.data) {\n                chart.config.data = computedData;\n                chart.update();\n                return;\n            }\n\n            const {\n                datasets: newDataSets = [],\n                ...newChartData\n            } = computedData;\n            const { datasets: currentDataSets = [] } = chart.config.data;\n\n            // copy values\n            assign(chart.config.data, newChartData);\n            chart.config.data.datasets = newDataSets.map(\n                (newDataSet: Chart.ChartDataSets): Chart.ChartDataSets => {\n                    // given the new set, find it's current match\n                    const currentDataSet = find(\n                        currentDataSets,\n                        (d: Chart.ChartDataSets): boolean =>\n                            d.label === newDataSet.label &&\n                            d.type === newDataSet.type\n                    );\n\n                    // There is no original to update, so simply add new one\n                    if (!currentDataSet || !newDataSet.data) return newDataSet;\n\n                    if (!currentDataSet.data) {\n                        currentDataSet.data = [];\n                    } else {\n                        currentDataSet.data.splice(newDataSet.data.length);\n                    }\n\n                    // copy in values\n                    assign(currentDataSet.data, newDataSet.data);\n\n                    // apply dataset changes, but keep copied data\n                    return {\n                        ...currentDataSet,\n                        ...newDataSet,\n                        data: currentDataSet.data,\n                    };\n                }\n            );\n\n            chart.update();\n        };\n\n        const destroyChart = (): void => {\n            if (chart) chart.destroy();\n        };\n\n        React.useEffect((): (() => void) => {\n            renderChart();\n\n            return () => destroyChart();\n        }, []);\n\n        React.useEffect((): void => {\n            if (redraw) {\n                destroyChart();\n                renderChart();\n            } else {\n                updateChart();\n            }\n        }, [props, computedData]);\n\n        return <canvas height={height} width={width} ref={canvas} id={id} />;\n    }\n);\n\nexport default ChartComponent;\n","import * as React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\nimport ChartComponent from './chart';\n\nexport const LineChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"line\" ref={ref} />\n));\n\nexport const BarChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"bar\" ref={ref} />\n));\n\nexport const HorizontalBarChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"horizontalBar\" ref={ref} />\n));\n\nexport const RadarChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"radar\" ref={ref} />\n));\n\nexport const DoughnutChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"doughnut\" ref={ref} />\n));\n\nexport const PolarAreaChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"polarArea\" ref={ref} />\n));\n\nexport const BubbleChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"bubble\" ref={ref} />\n));\n\nexport const PieChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"pie\" ref={ref} />\n));\n\nexport const ScatterChart = React.forwardRef((props: Props, ref) => (\n    <ChartComponent {...props} type=\"scatter\" ref={ref} />\n));\n\nexport default ChartComponent;\n","import React from 'react';\nimport { BarChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst VerticalBar = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Vertical Bar Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/VerticalBar.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <BarChart data={data} options={options} />\n    </>\n);\n\nexport default VerticalBar;\n","import React from 'react';\nimport { HorizontalBarChart  } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst HorizontalBar = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Horizontal Bar Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/HorizontalBar.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <HorizontalBarChart data={data} options={options} />\n    </>\n);\n\nexport default HorizontalBar;\n","import React from 'react';\nimport { BarChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['1', '2', '3', '4', '5', '6'],\n    datasets: [\n        {\n            label: '# of Red Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: 'rgb(255, 99, 132)',\n        },\n        {\n            label: '# of Blue Votes',\n            data: [2, 3, 20, 5, 1, 4],\n            backgroundColor: 'rgb(54, 162, 235)',\n        },\n        {\n            label: '# of Green Votes',\n            data: [3, 10, 13, 15, 22, 30],\n            backgroundColor: 'rgb(75, 192, 192)',\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                stacked: true,\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n        xAxes: [\n            {\n                stacked: true,\n            },\n        ],\n    },\n};\n\nconst StackedBar = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Stacked Bar Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/StackedBar.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <BarChart data={data} options={options} />\n    </>\n);\n\nexport default StackedBar;\n","import React from 'react';\nimport { BarChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['1', '2', '3', '4', '5', '6'],\n    datasets: [\n        {\n            label: '# of Red Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: 'rgb(255, 99, 132)',\n        },\n        {\n            label: '# of Blue Votes',\n            data: [2, 3, 20, 5, 1, 4],\n            backgroundColor: 'rgb(54, 162, 235)',\n        },\n        {\n            label: '# of Green Votes',\n            data: [3, 10, 13, 15, 22, 30],\n            backgroundColor: 'rgb(75, 192, 192)',\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst GroupedBar = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Grouped Bar Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/GroupedBar.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <BarChart data={data} options={options} />\n    </>\n);\n\nexport default GroupedBar;\n","import React from 'react';\nimport { LineChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['1', '2', '3', '4', '5', '6'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            fill: false,\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgba(255, 99, 132, 0.2)',\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst Line = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Line Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/Line.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <LineChart data={data} options={options} />\n    </>\n);\n\nexport default Line;\n","import React from 'react';\nimport { LineChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['1', '2', '3', '4', '5', '6'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            fill: false,\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgba(255, 99, 132, 0.2)',\n            yAxisID: 'y-axis-1',\n        },\n        {\n            label: '# of No Votes',\n            data: [1, 2, 1, 1, 2, 2],\n            fill: false,\n            backgroundColor: 'rgb(54, 162, 235)',\n            borderColor: 'rgba(54, 162, 235, 0.2)',\n            yAxisID: 'y-axis-2',\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                type: 'linear',\n                display: true,\n                position: 'left',\n                id: 'y-axis-1',\n            },\n            {\n                type: 'linear',\n                display: true,\n                position: 'right',\n                id: 'y-axis-2',\n                gridLines: {\n                    drawOnChartArea: false,\n                },\n            },\n        ],\n    },\n};\n\nconst MultiAxisLine = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Multi Axis Line Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/MultiAxisLine.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <LineChart data={data} options={options} />\n    </>\n);\n\nexport default MultiAxisLine;\n","import React from 'react';\nimport { ScatterChart } from '@jhonnold/react-chart.js';\n\nconst rand = () => Math.round(Math.random() * 20 - 10);\n\nconst data = {\n    datasets: [\n        {\n            label: 'A dataset',\n            data: [\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n                { x: rand(), y: rand() },\n            ],\n            backgroundColor: 'rgba(255, 99, 132, 1)',\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst Scatter = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Scatter Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/Scatter.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <ScatterChart data={data} options={options} />\n    </>\n);\n\nexport default Scatter;\n","import React from 'react';\nimport { DoughnutChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\nconst Doughnut = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Doughnut Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/Doughnut.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <DoughnutChart data={data} />\n    </>\n);\n\nexport default Doughnut;\n","import React from 'react';\nimport { PieChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\nconst Pie = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Pie Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/Pie.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <PieChart data={data} />\n    </>\n);\n\nexport default Pie;\n","import React from 'react';\nimport { PolarAreaChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.5)',\n                'rgba(54, 162, 235, 0.5)',\n                'rgba(255, 206, 86, 0.5)',\n                'rgba(75, 192, 192, 0.5)',\n                'rgba(153, 102, 255, 0.5)',\n                'rgba(255, 159, 64, 0.5)',\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\nconst Polar = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Polar Area Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/Polar.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <PolarAreaChart data={data} />\n    </>\n);\n\nexport default Polar;\n","import React from 'react';\nimport { RadarChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [2, 9, 3, 5, 2, 3],\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1,\n        },\n    ],\n};\n\nconst options = {\n    scale: {\n        ticks: { beginAtZero: true },\n    },\n};\n\nconst Radar = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">Radar Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/Radar.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <RadarChart data={data} options={options} />\n    </>\n);\n\nexport default Radar;\n","import React, { useEffect, useState } from 'react';\nimport { BarChart } from '@jhonnold/react-chart.js';\n\nconst rand = () => Math.round(Math.random() * 20 - 10);\n\nconst genData = () => ({\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n        {\n            label: 'Scale',\n            data: [rand(), rand(), rand(), rand(), rand(), rand()],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n            ],\n            borderWidth: 1,\n        },\n    ],\n});\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst Dynamic = () => {\n    const [data, setData] = useState(genData());\n\n    useEffect(() => {\n        const interval = setInterval(() => setData(genData()), 5000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <>\n            <div className=\"header\">\n                <h1 className=\"title\">Dynamic Bar Chart</h1>\n                <div className=\"links\">\n                    <a\n                        class=\"btn btn-gh\"\n                        href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/Dynamic.js\"\n                    >\n                        Github Source\n                    </a>\n                </div>\n            </div>\n            <BarChart data={data} options={options} />\n        </>\n    );\n};\n\nexport default Dynamic;\n","import React from 'react';\nimport { BarChart } from '@jhonnold/react-chart.js';\n\nconst rand = () => Math.round(Math.random() * 20 - 10);\n\nconst data = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            type: 'line',\n            label: 'Dataset 1',\n            borderColor: 'rgb(54, 162, 235)',\n            borderWidth: 2,\n            fill: false,\n            data: [rand(), rand(), rand(), rand(), rand(), rand()],\n        },\n        {\n            type: 'bar',\n            label: 'Dataset 2',\n            backgroundColor: 'rgb(255, 99, 132)',\n            data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n            borderColor: 'white',\n            borderWidth: 2,\n        },\n        {\n            type: 'bar',\n            label: 'Dataset 3',\n            backgroundColor: 'rgb(75, 192, 192)',\n            data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n        },\n    ],\n};\n\nconst MultiType = () => (\n    <>\n        <div className=\"header\">\n            <h1 className=\"title\">MultiType Chart</h1>\n            <div className=\"links\">\n                <a\n                    class=\"btn btn-gh\"\n                    href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/MultiType.js\"\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <BarChart data={data} />\n    </>\n);\n\nexport default MultiType;\n","import React, { useEffect, useState } from 'react';\nimport { BarChart } from '@jhonnold/react-chart.js';\n\nconst rand = () => Math.floor(Math.random() * 255);\n\nconst genData = () => ({\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            type: 'line',\n            label: 'Dataset 1',\n            borderColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n            borderWidth: 2,\n            fill: false,\n            data: [rand(), rand(), rand(), rand(), rand(), rand()],\n        },\n        {\n            type: 'bar',\n            label: 'Dataset 2',\n            backgroundColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n            data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n            borderColor: 'white',\n            borderWidth: 2,\n        },\n        {\n            type: 'bar',\n            label: 'Dataset 3',\n            backgroundColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n            data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n        },\n    ],\n});\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst Crazy = () => {\n    const [data, setData] = useState(genData());\n\n    useEffect(() => {\n        const interval = setInterval(() => setData(genData()), 5000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <>\n            <div className=\"header\">\n                <h1 className=\"title\">Crazy Chart</h1>\n                <div className=\"links\">\n                    <a\n                        class=\"btn btn-gh\"\n                        href=\"https://github.com/jhonnold/react-chart.js/blob/master/example/src/charts/Crazy.js\"\n                    >\n                        Github Source\n                    </a>\n                </div>\n            </div>\n            <BarChart data={data} options={options} />\n        </>\n    );\n};\n\nexport default Crazy;\n","import './reset.css';\nimport './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport VerticalBar from './charts/VerticalBar';\nimport HorizontalBar from './charts/HorizontalBar';\nimport StackedBar from './charts/StackedBar';\nimport GroupedBar from './charts/GroupedBar';\nimport Line from './charts/Line';\nimport MultiAxisLine from './charts/MultiAxisLine';\nimport Scatter from './charts/Scatter';\nimport Doughnut from './charts/Doughnut';\nimport Pie from './charts/Pie';\nimport Polar from './charts/Polar';\nimport Radar from './charts/Radar';\nimport Dynamic from './charts/Dynamic';\nimport MultiType from './charts/MultiType';\nimport Crazy from './charts/Crazy';\n\nconst App = () => (\n    <Router>\n        <div className=\"content\">\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/vertical-bar\" component={VerticalBar} />\n                <Route exact path=\"/horizontal-bar\" component={HorizontalBar} />\n                <Route exact path=\"/stacked-bar\" component={StackedBar} />\n                <Route exact path=\"/grouped-bar\" component={GroupedBar} />\n                <Route exact path=\"/line\" component={Line} />\n                <Route exact path=\"/multi-axis-line\" component={MultiAxisLine} />\n                <Route exact path=\"/scatter\" component={Scatter} />\n                <Route exact path=\"/doughnut\" component={Doughnut} />\n                <Route exact path=\"/pie\" component={Pie} />\n                <Route exact path=\"/polar\" component={Polar} />\n                <Route exact path=\"/radar\" component={Radar} />\n                <Route exact path=\"/dynamic-bar\" component={Dynamic} />\n                <Route exact path=\"/multi\" component={MultiType} />\n                <Route exact path=\"/crazy\" component={Crazy} />\n            </Switch>\n        </div>\n    </Router>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}